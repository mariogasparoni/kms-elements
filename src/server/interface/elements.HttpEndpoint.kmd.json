{
  "remoteClasses": [
    {
      "name": "HttpPostEndpoint",
      "extends": "HttpEndpoint",
      "doc": "An :rom:cls:`HttpPostEndpoint` contains SINK pads for AUDIO and VIDEO, which provide access to an HTTP file upload function\n\n   This type of endpoint provide unidirectional communications. Its :rom:cls:`MediaSources <MediaSource>` are accessed through the :term:`HTTP` POST method.",
      "constructor":
        {
          "doc": "Builder for the :rom:cls:`HttpPostEndpoint`.",
          "params": [
            {
              "name": "mediaPipeline",
              "doc": "the :rom:cls:`MediaPipeline` to which the endpoint belongs",
              "type": "MediaPipeline"
            },
            {
              "name": "disconnectionTimeout",
              "doc": "This is the time that an http endpoint will wait for a reconnection, in case an HTTP connection is lost.",
              "type": "int",
              "optional": true,
              "defaultValue": 2
            },
            {
              "name": "useEncodedMedia",
              "doc": "Feed the input stream as-is to the media pipeline, instead of first decoding it.
              By default, the input media gets decoded into a raw format before being processed by the media pipeline, because this allows Kurento to keep track of lost keyframes among other quality-control measurements. This of course has a cost in terms of processing power, but ensures that the output streaming will be robust and reliable. It is possible to disable this behavior by using this method, and in that case the encoded stream will be provided directly to the media pipeline, without prior decoding. Enabling this could have a severe effect on stability, because lost video keyframes will not be regenerated; however, this can be very useful to improve performance by greatly reducing the processing load.

              Keep in mind that if this option is enabled, the source media and target media MUST share the same format and codec configurations.

              We strongly recommend to avoid using this option, because correct behavior cannot be guaranteed.",
              "type": "boolean",
              "optional": true,
              "defaultValue": false
            }
          ]
        },
      "events": [
        "EndOfStream"
      ]
    },
    {
      "name": "HttpEndpoint",
      "abstract": true,
      "extends": "SessionEndpoint",
      "doc": "Endpoint that enables Kurento to work as an HTTP server, allowing peer HTTP clients to access media.",
      "methods": [
        {
          "name": "getUrl",
          "doc": "Obtains the URL associated to this endpoint",
          "params": [],
          "return": {
            "doc": "The url as a String",
            "type": "String"
          }
        }
      ]
    }
  ]
}
